--->>> Triggering Mail from Custom Module:
(Make sure to setup Outgoing Email Config.)

  -->> Module Directory Structure:
	
	custom_addons/
	├── custom_module (here: Form)/
	├── models/
	│   ├── __init__.py
	│   └── model.py
	├── views/
	│   ├── views.xml
	│   └── menu.xml
	├── security/
	│   └── ir.model.access.csv
	├── data
	│   └── template.xml
	├── __init__.py
	└── __manifest__.py

	
	-> Create a Custom Module folder (here: Form) in the custom_addons file, as shown in the structure.
	-> Create init and manifest file same as shown in the structure.
	-> Create models, views, security and data folder.

	-> Form/__init__.py :
		from . import models

	-> Form/__manifest__.py :
		{
		    'name':'Name',
		    'author': 'Arnav',
		    'depends': ['base','mail'],
	 	    'data': [
	  	    'security/ir.model.access.csv',
    		    'data/mail_template.xml',
    		    'views/menu.xml',
      		    'views/form.xml',
  		    ],
    		    'installable': True,
    		    'application': True,
		}

	-> Form/models/__init__.py :
		from . import form

	-> Form/models/form.py :
		from odoo import fields, models, api
		from odoo.exceptions import UserError
		class FormRegistration(models.Model):
		    _name = "registration.form"
		    _description = "Employee records"
		    name = fields.Char(string='Name', required=True)
		    date = fields.Date(string='Date', required=True)
		    gender = fields.Selection([('male', 'Male'), ('female', 'Female')], string="Gender")
		    address = fields.Text(string='Address', required=True)
		    email = fields.Char(string='Email', required=True)
		    password = fields.Char(string='Password', required=True)
		    def action_send_email(self):
		        template = self.env.ref("Form.email_template_registration_form")
		        if not template:
		            raise UserError("Email template not found. Please define it.")
		        for record in self:
		            email = record.email
		            if not email:
		                raise UserError("No valid email address found for reminders.")
		            email_values = template.generate_email(record.id, fields=["body_html"])
		            body_html = (
		                email_values["body_html"]
		                .replace("${object.name}", record.name or "...")
		                .replace("${object.gender}", record.gender or "...")
		                .replace("${object.address}", record.address or "...")
		                .replace("${object.email}", record.email or "...")
		            )            
		            email_value = template.generate_email(record.id, fields=["subject"])
		            subject = (
		                email_value["subject"]
		                .replace("${object.name}", record.name or "...")
		            )            
		            mail_values = {
		                "email_to": email,
		                "subject": subject,
		                "body_html": body_html,
		            }
		            mail = self.env["mail.mail"].create(mail_values)
		            mail.send()

	-> Form/data/mail_template.xml :
		<odoo>
		    <record id="email_template_registration_form" model="mail.template">
		        <field name="name">Employee Registration Email</field>
		        <field name="model_id" ref="model_registration_form"/> <!--help:' ref="model_<model name(_name)>"',  replace .(dot) with _(underscore) -->
		        <field name="subject">Welcome, ${object.name}!</field>
		        <field name="email_to">${object.email}</field>
		        <field name="body_html">
		            <![CDATA[
		                <p>Hello ${object.name},</p>
		                <p>Welcome to our system!, Your details:</p>
		                <p><b>Name</b> : <i>${object.name}</i></p>
		                <p><b>Gender</b> : <i>${object.gender}</i></p>
		                <p><b>Address</b> : <i>${object.address}</i></p>
		                <p><b>Email</b> : <i>${object.email}</i></p>
		                <p>Thank you for registering.</p>
		                <p>Best regards,<br/>Odoo</p>
		            ]]>
		        </field>
		    </record>
		</odoo>

	-> Form/security\ir.model.access.csv
		id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
		access_formregistration,access_formregistration,model_registration_form,base.group_user,1,1,1,1

	-> Form/views/form.xml:
		<?xml version="1.0" encoding="utf-8"?>
		<odoo>
		    <record id="view_form_tree" model="ir.ui.view">
		        <field name="name">Employee</field>
		        <field name="model">registration.form</field>
		        <field name="arch" type="xml">
		            <tree>
		                <field name="name" />
		                <field name="date" />
		                <field name="gender" />
		                <field name="address" />
		                <field name="email" />
		                <field name="password" />
		            </tree>
		        </field>
		    </record>
		    <record id="view_user_form" model="ir.ui.view">
		        <field name='name'>Employee</field>
		        <field name="model">registration.form</field>
		        <field name="arch" type="xml">
		            <form>
		                <header>
		                    <button name="action_send_email"
		                        type="object"
		                        string="Send Email"
		                        class="btn-primary" />
		                </header>
		                <group>
		                    <field name="name" />
		                    <field name="date" />
		                    <field name="gender" />
		                    <field name="address" />
		                    <field name="email" />
		                    <field name="password" />
		                </group>
		            </form>
		        </field>
		    </record>
		</odoo>

	-> Form/views/menu.xml:
		<odoo>
		    <record id="action_user" model="ir.actions.act_window">
		        <field name="name">Employee</field>
		        <field name="res_model">registration.form</field>
		        <field name="view_mode">tree,form</field>
		    </record>
		    <menuitem id="menu_user_root" name="Registration" sequence="10"/>
		    <menuitem id="menu_user" name="Employee" parent="menu_user_root" action="action_user" sequence="20"/>
		</odoo>